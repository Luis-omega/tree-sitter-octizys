{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "octizys",
  "word": "_identifier",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "top_item"
      }
    },
    "_spaces": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "\\s+",
        "flags": "u"
      }
    },
    "line_documentation_hypen": {
      "type": "TOKEN",
      "content": {
        "type": "PREC",
        "value": 5,
        "content": {
          "type": "PATTERN",
          "value": "-- \\|[^\\n]*\\n",
          "flags": "u"
        }
      }
    },
    "line_documentation_slash": {
      "type": "TOKEN",
      "content": {
        "type": "PREC",
        "value": 5,
        "content": {
          "type": "PATTERN",
          "value": "\\/\\/ \\|[^\\n]*\\n",
          "flags": "u"
        }
      }
    },
    "line_comment_hypen": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "--[^\\n]*\\n",
        "flags": "u"
      }
    },
    "line_comment_slash": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "\\/\\/[^\\n]*\\n",
        "flags": "u"
      }
    },
    "block_comment0": {
      "type": "TOKEN",
      "content": {
        "type": "PREC",
        "value": 1,
        "content": {
          "type": "PATTERN",
          "value": "\\{-([^}]|[^-]\\})*-\\}",
          "flags": "u"
        }
      }
    },
    "block_comment1": {
      "type": "TOKEN",
      "content": {
        "type": "PREC",
        "value": 2,
        "content": {
          "type": "PATTERN",
          "value": "\\{--([^}]|[^-](|-\\}))*--\\}",
          "flags": "u"
        }
      }
    },
    "block_comment2": {
      "type": "TOKEN",
      "content": {
        "type": "PREC",
        "value": 3,
        "content": {
          "type": "PATTERN",
          "value": "\\{---([^}]|[^-](|-\\}|--\\}))*---\\}",
          "flags": "u"
        }
      }
    },
    "block_comment3": {
      "type": "TOKEN",
      "content": {
        "type": "PREC",
        "value": 4,
        "content": {
          "type": "PATTERN",
          "value": "\\{----([^}]|[^-](|-\\}|--\\}|---\\}))*----\\}",
          "flags": "u"
        }
      }
    },
    "block_documentation0": {
      "type": "TOKEN",
      "content": {
        "type": "PREC",
        "value": 10,
        "content": {
          "type": "PATTERN",
          "value": "\\{-\\|([^}]|[^-]\\})*-\\}",
          "flags": "u"
        }
      }
    },
    "block_documentation1": {
      "type": "TOKEN",
      "content": {
        "type": "PREC",
        "value": 11,
        "content": {
          "type": "PATTERN",
          "value": "\\{--\\|([^}]|[^-](|-\\}))*--\\}",
          "flags": "u"
        }
      }
    },
    "block_documentation2": {
      "type": "TOKEN",
      "content": {
        "type": "PREC",
        "value": 12,
        "content": {
          "type": "PATTERN",
          "value": "\\{---\\|([^}]|[^-](|-\\}|--\\}))*---\\}",
          "flags": "u"
        }
      }
    },
    "block_documentation3": {
      "type": "TOKEN",
      "content": {
        "type": "PREC",
        "value": 13,
        "content": {
          "type": "PATTERN",
          "value": "\\{----\\|([^}]|[^-](|-\\}|--\\}|---\\}))*----\\}",
          "flags": "u"
        }
      }
    },
    "_identifier": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "\\p{XID_Start}(_|\\p{XID_Continue})*",
        "flags": "u"
      }
    },
    "uint": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "(([1-9][0-9_]*)|(0(0|_)*))",
        "flags": "u"
      }
    },
    "local_variable": {
      "type": "SYMBOL",
      "name": "_identifier"
    },
    "type_literal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "Int"
        },
        {
          "type": "STRING",
          "value": "Bool"
        }
      ]
    },
    "type_variable": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "local_variable"
        }
      ]
    },
    "type_parens": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "SYMBOL",
          "name": "_type_expression"
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "_type_atom_no_var": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "type_literal"
        },
        {
          "type": "SYMBOL",
          "name": "type_parens"
        }
      ]
    },
    "_type_atom": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_type_atom_no_var"
        },
        {
          "type": "SYMBOL",
          "name": "type_variable"
        }
      ]
    },
    "type_arrow": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_type_atom"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "->"
              },
              {
                "type": "SYMBOL",
                "name": "_type_atom"
              }
            ]
          }
        }
      ]
    },
    "_type_expression": {
      "type": "SYMBOL",
      "name": "type_arrow"
    },
    "expression_literal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "uint"
        },
        {
          "type": "STRING",
          "value": "True"
        },
        {
          "type": "STRING",
          "value": "False"
        }
      ]
    },
    "expression_variable": {
      "type": "SYMBOL",
      "name": "local_variable"
    },
    "expression_parens": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": ":"
                },
                {
                  "type": "SYMBOL",
                  "name": "_type_expression"
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "_expression_atom": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "expression_literal"
        },
        {
          "type": "SYMBOL",
          "name": "expression_parens"
        },
        {
          "type": "SYMBOL",
          "name": "expression_variable"
        }
      ]
    },
    "expression_application": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "function",
          "content": {
            "type": "SYMBOL",
            "name": "_expression_atom"
          }
        },
        {
          "type": "FIELD",
          "name": "arguments",
          "content": {
            "type": "REPEAT",
            "content": {
              "type": "SYMBOL",
              "name": "_expression_atom"
            }
          }
        }
      ]
    },
    "inner_parameter_alone": {
      "type": "SYMBOL",
      "name": "local_variable"
    },
    "inner_parameter_with_type": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "local_variable"
        },
        {
          "type": "STRING",
          "value": ":"
        },
        {
          "type": "SYMBOL",
          "name": "_type_expression"
        }
      ]
    },
    "inner_parameter": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "inner_parameter_alone"
        },
        {
          "type": "SYMBOL",
          "name": "inner_parameter_with_type"
        }
      ]
    },
    "parameter": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": ","
        },
        {
          "type": "SYMBOL",
          "name": "inner_parameter"
        }
      ]
    },
    "parameters": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "inner_parameter"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "parameter"
          }
        }
      ]
    },
    "scheme_start": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "forall"
        },
        {
          "type": "FIELD",
          "name": "type_arguments",
          "content": {
            "type": "REPEAT1",
            "content": {
              "type": "SYMBOL",
              "name": "local_variable"
            }
          }
        },
        {
          "type": "STRING",
          "value": "."
        }
      ]
    },
    "definition_type_annotation": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": ":"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "FIELD",
              "name": "scheme_start",
              "content": {
                "type": "SYMBOL",
                "name": "scheme_start"
              }
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "FIELD",
                  "name": "parameters",
                  "content": {
                    "type": "SYMBOL",
                    "name": "parameters"
                  }
                },
                {
                  "type": "STRING",
                  "value": "|-"
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "FIELD",
          "name": "output_type",
          "content": {
            "type": "SYMBOL",
            "name": "_type_expression"
          }
        }
      ]
    },
    "definition": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "SYMBOL",
            "name": "local_variable"
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "FIELD",
              "name": "definition_type_annotation",
              "content": {
                "type": "SYMBOL",
                "name": "definition_type_annotation"
              }
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        }
      ]
    },
    "expression_function": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "\\"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "parameters"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "inner_parameter"
        },
        {
          "type": "STRING",
          "value": "|-"
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        }
      ]
    },
    "expression_if": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "if"
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        },
        {
          "type": "STRING",
          "value": "then"
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        },
        {
          "type": "STRING",
          "value": "else"
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        }
      ]
    },
    "expression_let": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "let"
            },
            {
              "type": "REPEAT1",
              "content": {
                "type": "SEQ",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "definition"
                  },
                  {
                    "type": "STRING",
                    "value": ";"
                  }
                ]
              }
            },
            {
              "type": "STRING",
              "value": "in"
            },
            {
              "type": "SYMBOL",
              "name": "_expression"
            }
          ]
        }
      ]
    },
    "_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "expression_if"
        },
        {
          "type": "SYMBOL",
          "name": "expression_let"
        },
        {
          "type": "SYMBOL",
          "name": "expression_function"
        },
        {
          "type": "SYMBOL",
          "name": "expression_application"
        }
      ]
    },
    "top_item": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "definition"
        },
        {
          "type": "STRING",
          "value": ";"
        }
      ]
    }
  },
  "extras": [
    {
      "type": "SYMBOL",
      "name": "_spaces"
    },
    {
      "type": "SYMBOL",
      "name": "line_documentation_hypen"
    },
    {
      "type": "SYMBOL",
      "name": "line_documentation_slash"
    },
    {
      "type": "SYMBOL",
      "name": "line_comment_hypen"
    },
    {
      "type": "SYMBOL",
      "name": "line_comment_slash"
    },
    {
      "type": "SYMBOL",
      "name": "block_comment0"
    },
    {
      "type": "SYMBOL",
      "name": "block_comment1"
    },
    {
      "type": "SYMBOL",
      "name": "block_comment2"
    },
    {
      "type": "SYMBOL",
      "name": "block_comment3"
    },
    {
      "type": "SYMBOL",
      "name": "block_documentation0"
    },
    {
      "type": "SYMBOL",
      "name": "block_documentation1"
    },
    {
      "type": "SYMBOL",
      "name": "block_documentation2"
    },
    {
      "type": "SYMBOL",
      "name": "block_documentation3"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": [],
  "reserved": {}
}